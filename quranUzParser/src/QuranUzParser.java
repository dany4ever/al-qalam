// Generated by FilterBuilder. http://htmlparser.org
// [aced0005737200206f72672e68746d6c7061727365722e66696c746572732e416e6446696c74657225a77ce23aa3c4110200015b000b6d5072656469636174657374001c5b4c6f72672f68746d6c7061727365722f4e6f646546696c7465723b78707572001c5b4c6f72672e68746d6c7061727365722e4e6f646546696c7465723b8f17479b1d5f7992020000787000000002737200246f72672e68746d6c7061727365722e66696c746572732e5461674e616d6546696c746572b28b2601a614890f0200014c00056d4e616d657400124c6a6176612f6c616e672f537472696e673b7870740003444956737200296f72672e68746d6c7061727365722e66696c746572732e48617341747472696275746546696c74657296abdfb3b0714cda0200024c000a6d41747472696275746571007e00064c00066d56616c756571007e00067870740005636c617373740011717572616e2d7472616e736c6174696f6e]


import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;

import org.htmlparser.*;
import org.htmlparser.filters.*;
import org.htmlparser.beans.*;
import org.htmlparser.util.*;

public class QuranUzParser {
	
	private static String 			defaultURL = "http://www.quran.uz/tarjima/quran/";
	private static String 			defaultPath = "quran-uz/";
	//private static URLConnection 	conn;
	private static String			url;
	
	public static void main(String args[]) {
		String 	inputLine;
		int 	i = 1;
		for (i=1;i<=114;i++) {
			try {
				url = defaultURL + i;
				
				TagNameFilter filter0 = new TagNameFilter ();
		        filter0.setName ("DIV");
		        
		        HasAttributeFilter filter1 = new HasAttributeFilter ();
		        filter1.setAttributeName ("class");
		        filter1.setAttributeValue ("quran-translation");
		        
		        NodeFilter[] array0 = new NodeFilter[2];
		  
		        array0[0] = filter0;
		        array0[1] = filter1;
		        AndFilter filter2 = new AndFilter ();
		        filter2.setPredicates (array0);
		        NodeFilter[] array1 = new NodeFilter[1];
		        array1[0] = filter2;
		        FilterBean bean = new FilterBean ();
		        bean.setFilters (array1);
		      
		        bean.setURL (url);
		        
		        NodeList list = bean.getNodes();
		        
		        File outFile = new File(i+".txt");
				
				BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));
				
		        for (int j=1;j<list.size();j++) {
		        	
		        	inputLine = list.elementAt(j).toPlainTextString();
		        
		        	int startIndex = inputLine.indexOf('.') + 2;
		        	
		        	inputLine = inputLine.substring(startIndex);

		        	if (inputLine.charAt(inputLine.length()-1) == ')') {
		        			int endIndex = inputLine.lastIndexOf('(');
		        			
		        			if (endIndex == -1)
				        		endIndex = inputLine.length() - 1;
		        			
		        			inputLine = inputLine.substring(0, endIndex);
		        	}
		        	
		        	//System.out.println("Start : " + startIndex + " End :"+ endIndex);
		        	
			        writer.write(inputLine);
			        
		        	//writer.write(list.elementAt(j).toPlainTextString());
			        
			        writer.newLine();
		        }

		        writer.close();
		        
		        System.out.println("File "+i+" is DONE");
		        
			}
			catch (Exception e)
			{
				System.out.println("Error: " + e.getMessage());
			}
		}
		
	}
}
